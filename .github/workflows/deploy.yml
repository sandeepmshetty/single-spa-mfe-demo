name: Deploy Single-SPA Micro-Frontends

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  # Build and deploy shared library first (dependency for other MFEs)
  deploy-shared-library:
    name: Deploy Shared Library
    runs-on: ubuntu-latest
    outputs:
      shared-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/shared-library
          npm ci

      - name: Build shared library
        run: |
          cd packages/shared-library
          npm run build

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }}
          vercel-org-id: ${{ env.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_SHARED_PROJECT_ID }}
          working-directory: ./packages/shared-library
          vercel-args: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && '--prod' || '' }}

  # Deploy React MFE
  deploy-react-mfe:
    name: Deploy React MFE
    runs-on: ubuntu-latest
    needs: deploy-shared-library
    outputs:
      react-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/react-mfe
          npm ci

      - name: Build React MFE
        run: |
          cd packages/react-mfe
          REACT_APP_SHARED_LIB_URL=${{ needs.deploy-shared-library.outputs.shared-url }} npm run build

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }}
          vercel-org-id: ${{ env.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_REACT_PROJECT_ID }}
          working-directory: ./packages/react-mfe
          vercel-args: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && '--prod' || '' }}

  # Deploy Vue MFE
  deploy-vue-mfe:
    name: Deploy Vue MFE
    runs-on: ubuntu-latest
    needs: deploy-shared-library
    outputs:
      vue-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/vue-mfe
          npm ci

      - name: Build Vue MFE
        run: |
          cd packages/vue-mfe
          VITE_SHARED_LIB_URL=${{ needs.deploy-shared-library.outputs.shared-url }} npm run build

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }}
          vercel-org-id: ${{ env.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_VUE_PROJECT_ID }}
          working-directory: ./packages/vue-mfe
          vercel-args: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && '--prod' || '' }}

  # Deploy Angular MFE
  deploy-angular-mfe:
    name: Deploy Angular MFE
    runs-on: ubuntu-latest
    needs: deploy-shared-library
    outputs:
      angular-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/angular-mfe
          npm ci

      - name: Build Angular MFE
        run: |
          cd packages/angular-mfe
          npm run build

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }}
          vercel-org-id: ${{ env.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_ANGULAR_PROJECT_ID }}
          working-directory: ./packages/angular-mfe
          vercel-args: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && '--prod' || '' }}

  # Deploy Shell App (orchestrator) - depends on all MFEs
  deploy-shell-app:
    name: Deploy Shell Application
    runs-on: ubuntu-latest
    needs: [deploy-shared-library, deploy-react-mfe, deploy-vue-mfe, deploy-angular-mfe]
    outputs:
      shell-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/shell-app
          npm ci

      - name: Build Shell App with MFE URLs
        run: |
          cd packages/shell-app
          REACT_MFE_URL=${{ needs.deploy-react-mfe.outputs.react-url }} \
          VUE_MFE_URL=${{ needs.deploy-vue-mfe.outputs.vue-url }} \
          ANGULAR_MFE_URL=${{ needs.deploy-angular-mfe.outputs.angular-url }} \
          SHARED_LIB_URL=${{ needs.deploy-shared-library.outputs.shared-url }} \
          npm run build

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }}
          vercel-org-id: ${{ env.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_SHELL_PROJECT_ID }}
          working-directory: ./packages/shell-app
          vercel-args: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && '--prod' || '' }}

  # Integration testing across all deployed MFEs
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [deploy-shell-app]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install test dependencies
        run: npm install -g playwright

      - name: Run integration tests
        run: |
          export SHELL_URL=${{ needs.deploy-shell-app.outputs.shell-url }}
          npm run test:e2e

  # Notify deployment status
  notify-deployment:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-shell-app]
    if: always()
    steps:
      - name: Deployment Success
        if: needs.deploy-shell-app.result == 'success'
        run: |
          echo "üöÄ Deployment successful!"
          echo "Shell App: ${{ needs.deploy-shell-app.outputs.shell-url }}"

      - name: Deployment Failed
        if: needs.deploy-shell-app.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          exit 1